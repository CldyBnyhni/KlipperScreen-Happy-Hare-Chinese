# Happy Hare KlipperScreen menus. Don't remove this line, installer needs it!
#
# Copyright (C) 2023  moggieuk#6538 (discord)
#                     moggieuk@hotmail.com
#
# Menu options:
# name, icon, panel, method, confirm, enable, params, style, NEW: show_disabled, refresh_on
#
# Additional functionality added with this MMU Happy Hare fork:
#
# Options:
# show_disabled - True will cause 'enable' logic to show button disabled rather than not display it
# refresh_on - List of printer variables to monitor real time for 'show_disabled' 
#
# Menu name:
# can specify multiple roots, e.g. [menu __main,__print mymenu]
# will duplicate on both __main and __print menus
# (no space after comman)
#
# Useful for custom single purpose use (like dedicated SpoolMan display on filament rack)
# you can make any panel "sticky" (never changes without navigation) by adding the following.
# Caution: only intended for monitoring panels - NO NAVIGATION
# [main]
# sticky_panel: <panel_name>
#

[menu __main,__print mmu]
name: {{ gettext('MMU') }}
icon: mmu_carrot
panel: mmu_main
enable: {{ printer.mmu is defined and not klipperscreen.side_mmu_shortcut }}

[menu __main,__print mmu ttg]
name: {{ gettext('管理 TTG...') }}
icon: mmu_ttg_map
panel: mmu_toolmap

[menu __main,__print mmu filaments]
name: {{ gettext('耗材...') }}
icon: mmu_filaments
panel: mmu_filaments

[menu __main,__print mmu spoolman]
name: {{ gettext('Spoolman...') }}
icon: spoolman
panel: mmu_spoolman
enable: {{ moonraker.spoolman }}
show_disabled: True

[menu __main,__print mmu preload_gates]
name: {{ gettext('预加载通道...') }}
icon: mmu_reset
enable: {{ printer.idle_timeout.state != "Printing" }}
show_disabled: True
refresh_on: printer.idle_timeout.state

MMU_iter_preload_gates

[menu __main,__print mmu check_gates]
name: {{ gettext('检查通道...') }}
icon: mmu_checkgates
enable: {{ printer.idle_timeout.state != "Printing" }}
show_disabled: True
refresh_on: printer.idle_timeout.state

MMU_iter_check_gates

[menu __main,__print mmu tools]
name: {{ gettext('装载工具...') }}
icon: extruder
enable: {{ printer.idle_timeout.state != "Printing" }}
show_disabled: True
refresh_on: printer.idle_timeout.state

MMU_iter_load_tools

# Example: to just select the tool (not load)
#[menu __main,__print mmu select_tools]
#name: {{ gettext('选择工具...') }}
#icon: extruder
#enable: {{ printer.idle_timeout.state != "Printing" }}
#show_disabled: True
#refresh_on: printer.idle_timeout.state
#
#MMU_iter_select_tools

[menu __main,__print mmu select_gates]
name: {{ gettext('选择通道...') }}
icon: mmu_select_gate
enable: {{ printer.idle_timeout.state != "Printing" }}
show_disabled: True
refresh_on: printer.idle_timeout.state

[menu __main,__print mmu select_gates bypass}]
name: {{ gettext('选择旁路') }}
icon: mmu_select_bypass
method: printer.gcode.script
params: {"script":"MMU_SELECT_BYPASS"}
enable: {{ printer.mmu.gate != -2 and printer.mmu.action == "Idle" }}
show_disabled: True
refresh_on: printer.mmu.gate, printer.mmu.action

MMU_iter_select_gates

[menu __main,__print mmu status]
name: {{ gettext('显示状态') }}
icon: info
method: printer.gcode.script
params: {"script":"MMU_STATUS"}
enable: {{ printer.mmu.action == "Idle" }}
show_disabled: True
refresh_on: printer.mmu.action

[menu __main,__print mmu print]
name: {{ gettext('打印统计') }}
icon: mmu_status
method: printer.gcode.script
params: {"script":"MMU_STATS"}
enable: {{ printer.mmu.action == "Idle" }}
show_disabled: True
refresh_on: printer.mmu.action

[menu __main,__print mmu reset]
name: {{ gettext('重置统计') }}
icon: mmu_stats_reset
method: printer.gcode.script
confirm: Are you sure you want to reset MMU statistics?
params: {"script":"MMU_STATS RESET=1"}
enable: {{ printer.mmu.action == "Idle" }}
show_disabled: True
refresh_on: printer.mmu.action

[menu __main,__print mmu enable_endless_spool]
name: {{ gettext('启用材料管理') }}
icon: mmu_enable_endless_spool
method: printer.gcode.script
params: {"script":"MMU_ENDLESS_SPOOL ENABLE=1"}
enable: {{ printer.mmu.endless_spool == 0 }}
show_disabled: True
refresh_on: printer.mmu.endless_spool

[menu __main,__print mmu disable_endless_spool]
name: {{ gettext('禁用材料管理') }}
icon: mmu_disable_endless_spool
method: printer.gcode.script
params: {"script":"MMU_ENDLESS_SPOOL ENABLE=0"}
enable: {{ printer.mmu.endless_spool == 1 }}
show_disabled: True
refresh_on: printer.mmu.endless_spool
[menu __main,__print mmu led_disable]

name: {{ gettext('关闭LED灯') }}
icon: mmu_led_disable
method: printer.gcode.script
params: {"script":"MMU_LED ENABLE=0 QUIET=1"}
enable: {{ printer.mmu.enabled == 1 and not printer.mmu.print_state == "standby" }}
show_disabled: True
refresh_on: printer.mmu.enabled, printer.mmu.print_state

[menu __main,__print mmu led_gate_status]
name: {{ gettext('LED通道状态') }}
icon: mmu_led_gate_status
method: printer.gcode.script
params: {"script":"MMU_LED ENABLE=1 EXIT_EFFECT=gate_status QUIET=1"}
enable: {{ printer.mmu.enabled == 1 and not printer.mmu.print_state == "standby" }}
show_disabled: True
refresh_on: printer.mmu.enabled, printer.mmu.print_state

[menu __main,__print mmu led_filament_color]
name: {{ gettext('LED材料颜色') }}
icon: mmu_led_filament_color
method: printer.gcode.script
params: {"script":"MMU_LED ENABLE=1 EXIT_EFFECT=filament_color QUIET=1"}
enable: {{ printer.mmu.enabled == 1 and not printer.mmu.print_state == "standby" }}
show_disabled: True
refresh_on: printer.mmu.enabled, printer.mmu.print_state

# Example: User added ...
[menu __main,__print mmu spare1]
name: {{ gettext('用户自定义') }}
icon: mmu_carrot
enable: False
show_disabled: False

[menu __main,__print mmu spare1 home]
name: {{ gettext('归零选择器') }}
icon: home
method: printer.gcode.script
params: {"script":"MMU_HOME"}

[menu __main,__print mmu spare1 cut]
name: {{ gettext('切料测试') }}
icon: extruder
method: printer.gcode.script
params: {"script":"MMU_CUT"}

[menu __main,__print mmu spare1 servoup]
name: {{ gettext('舵机上升') }}
icon: arrow-up
method: printer.gcode.script
params: {"script":"MMU_SERVO POS=up"}
enable: {{ printer.mmu.servo != "Up" }}
show_disabled: True
refresh_on: printer.mmu.servo

[menu __main,__print mmu spare1 servodown]
name: {{ gettext('舵机下降') }}
icon: arrow-down
method: printer.gcode.script
params: {"script":"MMU_SERVO POS=down"}
enable: {{ printer.mmu.servo != "Down" }}
show_disabled: True
refresh_on: printer.mmu.servo

[menu __main,__print mmu spare1 encoder]
name: {{ gettext('校准编码器') }}
icon: mmu_encodercal
method: printer.gcode.script
params: {"script":"MMU_CALIBRATE_ENCODER"}

[menu __main,__print mmu spare1 bowden]
name: {{ gettext('校准距离') }}
icon: extruder
method: printer.gcode.script
params: { "script":"MMU_CALIBRATE_BOWDEN_LENGTH" }

[menu __main,__print mmu spare1 motoroff]
name: {{ gettext('禁用电机') }}
icon: motor-off
method: printer.gcode.script
confirm: "This will invalidate selector position and require rehoming. Are you sure?"
params: {"script":"MMU_MOTORS_OFF"}
#
# ---------- MMU Manage submenu end

# ---------- MMU config/calibration menu
#
[menu __main more mmu_calib]
name: {{ gettext('MMU 设置') }}
icon: mmu_gear
enable: {{ printer.mmu is defined }}

[menu __main more mmu_calib home]
name: {{ gettext('归零选择器') }}
icon: home
method: printer.gcode.script
params: {"script":"MMU_HOME"}

[menu __main more mmu_calib select_gates]
name: {{ gettext('选择通道...') }}
icon: mmu_select_gate

MMU_iter_config_select_gates

[menu __main more mmu_calib grip]
name: {{ gettext('测试抓握') }}
icon: mmu_grip
method: printer.gcode.script
params: {"script":"MMU_TEST_GRIP"}

[menu __main more mmu_calib formtip]
name: {{ gettext('成型尖端') }}
icon: mmu_formtip
method: printer.gcode.script
params: {"script":"MMU_FORM_TIP"}

[menu __main more mmu_calib servoup]
name: {{ gettext('舵机上升') }}
icon: arrow-up
method: printer.gcode.script
params: {"script":"MMU_SERVO POS=up"}
enable: {{ printer.mmu.servo != "Up" }}
show_disabled: True
refresh_on: printer.mmu.servo

[menu __main more mmu_calib servomove]
name: {{ gettext('舵机移动') }}
icon: arrow-right
method: printer.gcode.script
params: {"script":"MMU_SERVO POS=move"}
enable: {{ printer.mmu.servo != "Move" }}
show_disabled: True
refresh_on: printer.mmu.servo

[menu __main more mmu_calib servodown]
name: {{ gettext('舵机下降') }}
icon: arrow-down
method: printer.gcode.script
params: {"script":"MMU_SERVO POS=down"}
enable: {{ printer.mmu.servo != "Down" }}
show_disabled: True
refresh_on: printer.mmu.servo

[menu __main more mmu_calib encoder]
name: {{ gettext('校准编码器') }}
icon: mmu_encodercal
method: printer.gcode.script
params: {"script":"MMU_CALIBRATE_ENCODER"}

[menu __main more mmu_calib all]
name: {{ gettext('全部校准') }}
icon: extruder
method: printer.gcode.script
confirm: This will calibrate all gates. Are you sure?
params: {"script":"MMU_CALIBRATE_GATES ALL=1"}

[menu __main more mmu_calib gate]
name: {{ gettext('通道校准...') }}
icon: mmu_calibrate

MMU_iter_calibration
#
# ---------- MMU config/calibration end

